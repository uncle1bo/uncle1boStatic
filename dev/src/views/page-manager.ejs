<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>页面管理器 - Uncle1bo静态站点工具集</title>
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <div class="container mt-5">
    <div class="row justify-content-center">
      <div class="col-md-10">
        <div class="card shadow-sm">
          <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h1 class="h3 mb-0">页面管理器</h1>
            <a href="/" class="btn btn-sm btn-outline-light">
              <i class="bi bi-house-door me-1"></i>返回首页
            </a>
          </div>
          <div class="card-body">
            <div class="alert alert-info">
              <i class="bi bi-info-circle-fill me-2"></i>
              在这里您可以查看、删除和创建网站页面。
            </div>
            
            <!-- 创建新页面按钮 -->
            <div class="mb-4 text-end">
              <a href="/page-generator?from=page-manager" class="btn btn-success">
                <i class="bi bi-plus-circle me-2"></i>创建新页面
              </a>
            </div>
            
            <!-- 页面列表 -->
            <div class="table-responsive">
              <table id="pagesTable" class="table table-striped table-hover">
                <thead>
                  <tr>
                    <th>页面名称</th>
                    <th>中文标题</th>
                    <th>英文标题</th>
                    <th>最后修改时间</th>
                    <th>操作</th>
                  </tr>
                </thead>
                <tbody id="pagesList">
                  <!-- 页面列表将通过JavaScript动态加载 -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 删除确认模态框 -->
  <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header bg-danger text-white">
          <h5 class="modal-title" id="deleteConfirmModalLabel">确认删除</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p>您确定要删除页面 <strong id="deletePageName"></strong> 吗？</p>
          <p class="text-danger"><i class="bi bi-exclamation-triangle-fill me-2"></i>此操作不可撤销！</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-danger" id="confirmDeleteBtn">删除</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 依赖管理器 - 必须在其他依赖资源之前加载 -->
  <script src="/prod/js/dependency-manager.js"></script>
  <script>
    // 依赖管理器会自动初始化，无需手动创建实例
    // 创建全局Promise用于依赖资源加载
        window.dependencyResourcesReady = Promise.all([
      window.dependencyManager.loadResource('bootstrap-css'),
      window.dependencyManager.loadResource('bootstrap-icons')
    ]).then(() => {
      // 加载DataTables相关资源
      return window.dependencyManager.loadResourceWithDependencies('dataTables-bootstrap');
    }).then(() => {
      console.log('所有资源及依赖加载完成，可以安全使用DataTables功能');
      return true; // 标记资源加载完成
    }).catch(error => {
      console.error('依赖资源加载失败:', error);
      throw error;
    });
  </script>
  
  <script>
    // 等待依赖资源加载完成后再初始化页面功能
    async function initializePageManager() {
      try {
        // 等待DOM加载完成
        if (document.readyState === 'loading') {
          await new Promise(resolve => {
            document.addEventListener('DOMContentLoaded', resolve);
          });
        }
        
        // 等待依赖资源加载完成
        if (window.dependencyResourcesReady) {
            await window.dependencyResourcesReady;
          console.log('依赖资源加载完成，开始初始化页面管理器');
        } else {
          console.warn('依赖资源加载Promise不存在，直接初始化页面管理器');
        }
        
        // 依赖管理器已自动处理所有依赖检查，这里只做最基本的验证
        if (typeof $ === 'undefined' || typeof $.fn.DataTable === 'undefined') {
          throw new Error('必要的依赖库未正确加载');
        }
        
        console.log('开始初始化DataTable...');
      // 初始化DataTable
      const table = $('#pagesTable').DataTable({
        language: {
          url: '/prod/assets/libs/datatables/zh.json'
        },
        order: [[3, 'desc']], // 默认按最后修改时间降序排序
        columns: [
          { data: 'name' },
          { data: 'zhTitle' },
          { data: 'enTitle' },
          { 
            data: 'modified',
            render: function(data) {
              return new Date(data).toLocaleString('zh-CN');
            }
          },
          {
            data: null,
            orderable: false,
            render: function(data) {
              let buttons = `
                <div class="btn-group btn-group-sm" role="group">
                  <a href="/prod/pages/${data.type}/${data.file}" target="_blank" class="btn btn-outline-primary" title="查看页面">
                    <i class="bi bi-eye"></i>
                  </a>`;
              
              // 如果页面可编辑，添加编辑按钮
              if (data.editable) {
                buttons += `
                  <a href="/page-generator?edit=${data.name}&from=page-manager" class="btn btn-outline-success" title="编辑页面">
                    <i class="bi bi-pencil"></i>
                  </a>`;
              }
              
              buttons += `
                  <button type="button" class="btn btn-outline-danger delete-page" data-page-name="${data.name}" title="删除页面">
                    <i class="bi bi-trash"></i>
                  </button>
                </div>
              `;
              
              return buttons;
            }
          }
        ]
      });
      
      // 自动清理预览文件
      function cleanupPreviewFiles() {
        $.ajax({
          url: '/page-manager/cleanup-preview',
          method: 'POST',
          success: function(response) {
            if (response.success && response.cleanedCount > 0) {
              console.log(`已清理 ${response.cleanedCount} 个预览文件`);
            }
          },
          error: function(xhr) {
            console.warn('清理预览文件失败:', xhr.responseJSON?.error || '服务器错误');
          }
        });
      }
      
      // 加载页面列表
      window.loadPages = function() {
        // 清空DataTable并显示加载状态
        table.clear().draw();
        
        // 显示加载状态
        const loadingRow = `
          <tr>
            <td colspan="5" class="text-center">
              <div class="spinner-border spinner-border-sm me-2" role="status"></div>
              正在加载页面列表...
            </td>
          </tr>
        `;
        $('#pagesList').html(loadingRow);
        
        $.ajax({
          url: '/page-manager/list',
          method: 'GET',
          timeout: 30000, // 30秒超时
          success: function(response) {
            if (response.success) {
              // 清空表格并添加新数据
              table.clear().rows.add(response.pages).draw();
            } else {
              showAlert('danger', '加载页面列表失败: ' + (response.error || '未知错误'));
              // 清空DataTable并显示错误状态
              table.clear().draw();
              $('#pagesList').html(`
                <tr>
                  <td colspan="5" class="text-center text-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    加载失败: ${response.error || '未知错误'}
                  </td>
                </tr>
              `);
            }
          },
          error: function(xhr, status, error) {
            let errorMessage = '服务器错误';
            if (status === 'timeout') {
              errorMessage = '请求超时，请检查网络连接';
            } else if (xhr.responseJSON?.error) {
              errorMessage = xhr.responseJSON.error;
            } else if (error) {
              errorMessage = error;
            }
            
            showAlert('danger', '加载页面列表失败: ' + errorMessage);
            // 清空DataTable并显示错误状态
            table.clear().draw();
            $('#pagesList').html(`
              <tr>
                <td colspan="5" class="text-center text-danger">
                  <i class="bi bi-exclamation-triangle me-2"></i>
                  加载失败: ${errorMessage}
                  <br>
                  <button class="btn btn-sm btn-outline-primary mt-2" onclick="window.loadPages()">
                    <i class="bi bi-arrow-clockwise me-1"></i>重试
                  </button>
                </td>
              </tr>
            `);
          }
        });
      }
      
      // 初始加载页面列表
      loadPages();
      
      // 自动清理预览文件
      cleanupPreviewFiles();
      
      // 删除确认模态框
      const deleteConfirmModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
      let pageToDelete = '';
      
      // 点击删除按钮
      $('#pagesTable').on('click', '.delete-page', function() {
        pageToDelete = $(this).data('page-name');
        $('#deletePageName').text(pageToDelete);
        deleteConfirmModal.show();
      });
      
      // 确认删除
      $('#confirmDeleteBtn').on('click', function() {
        if (!pageToDelete) return;
        
        $.ajax({
          url: `/page-manager/delete/${pageToDelete}`,
          method: 'DELETE',
          success: function(response) {
            if (response.success) {
              showAlert('success', `页面 ${pageToDelete} 已成功删除`);
              window.loadPages(); // 重新加载页面列表
            } else {
              showAlert('danger', '删除页面失败: ' + (response.error || '未知错误'));
            }
          },
          error: function(xhr) {
            showAlert('danger', '删除页面失败: ' + (xhr.responseJSON?.error || '服务器错误'));
          },
          complete: function() {
            deleteConfirmModal.hide();
            pageToDelete = '';
          }
        });
      });
      
      // 显示提示信息
      function showAlert(type, message) {
        const alertHtml = `
          <div class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `;
        
        // 移除现有的提示
        $('.alert-dismissible').remove();
        
        // 添加新提示
        $('.card-body').prepend(alertHtml);
        
        // 5秒后自动关闭
        setTimeout(() => {
          $('.alert-dismissible').alert('close');
        }, 5000);
      }
      
      console.log('页面管理器初始化完成');
    } catch (error) {
      console.error('页面管理器初始化失败:', error);
    }
  }
  
  // 启动初始化
  initializePageManager();
  </script>
</body>
</html>